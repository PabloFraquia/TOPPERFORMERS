<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="99246" started-at="2020-08-12T11:27:09 UYT" finished-at="2020-08-12T11:28:48 UYT">
    <groups>
    </groups>
    <test name="Default test" duration-ms="99246" started-at="2020-08-12T11:27:09 UYT" finished-at="2020-08-12T11:28:48 UYT">
      <class name="Tests.ValidationRuleTest">
        <test-method status="PASS" signature="initValidationRuleProperties()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="initValidationRuleProperties" is-config="true" duration-ms="13" started-at="2020-08-12T11:27:09 UYT" finished-at="2020-08-12T11:27:09 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initValidationRuleProperties -->
        <test-method status="PASS" signature="initializeDriverAndLoginPage()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="initializeDriverAndLoginPage" is-config="true" duration-ms="32547" started-at="2020-08-12T11:27:09 UYT" finished-at="2020-08-12T11:27:42 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriverAndLoginPage -->
        <test-method status="PASS" signature="noRequiredField()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="noRequiredField" duration-ms="6663" started-at="2020-08-12T11:27:42 UYT" finished-at="2020-08-12T11:27:48 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noRequiredField -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="closeDriver" is-config="true" duration-ms="3" started-at="2020-08-12T11:27:48 UYT" finished-at="2020-08-12T11:27:48 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method status="PASS" signature="initializeDriverAndLoginPage()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="initializeDriverAndLoginPage" is-config="true" duration-ms="25430" started-at="2020-08-12T11:27:48 UYT" finished-at="2020-08-12T11:28:14 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriverAndLoginPage -->
        <test-method status="PASS" signature="wrongFormulaText()[pri:1, instance:Tests.ValidationRuleTest@2a556333]" name="wrongFormulaText" duration-ms="6358" started-at="2020-08-12T11:28:14 UYT" finished-at="2020-08-12T11:28:20 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongFormulaText -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="closeDriver" is-config="true" duration-ms="0" started-at="2020-08-12T11:28:20 UYT" finished-at="2020-08-12T11:28:20 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method status="PASS" signature="initializeDriverAndLoginPage()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="initializeDriverAndLoginPage" is-config="true" duration-ms="23687" started-at="2020-08-12T11:28:20 UYT" finished-at="2020-08-12T11:28:44 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriverAndLoginPage -->
        <test-method status="FAIL" signature="correctFilledFields()[pri:2, instance:Tests.ValidationRuleTest@2a556333]" name="correctFilledFields" duration-ms="4477" started-at="2020-08-12T11:28:44 UYT" finished-at="2020-08-12T11:28:48 UYT">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[TypeError: can't access dead object
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'PABLOF', ip: '172.20.10.4', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 78.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200708170202, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 16260, moz:profile: C:\Users\pablo\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e2469d01-a25e-441e-b1bd-83d74ceed853
*** Element info: {Using=tag name, value=iframe}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: TypeError: can't access dead object
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'PABLOF', ip: '172.20.10.4', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 78.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200708170202, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 16260, moz:profile: C:\Users\pablo\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e2469d01-a25e-441e-b1bd-83d74ceed853
*** Element info: {Using=tag name, value=iframe}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByTagName(RemoteWebDriver.java:411)
at org.openqa.selenium.By$ByTagName.findElement(By.java:354)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
at org.openqa.selenium.support.ui.FluentWait.lambda$checkConditionInLoop$2(FluentWait.java:233)
at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctFilledFields -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:Tests.ValidationRuleTest@2a556333]" name="closeDriver" is-config="true" duration-ms="0" started-at="2020-08-12T11:28:48 UYT" finished-at="2020-08-12T11:28:48 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- Tests.ValidationRuleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
